#!/bin/bash
#
# This script will initilize the project
#

# Make the source directory if needed
if [ ! -d ${SOURCE_DIR} ]; then
  echo "Making dir '${SOURCE_DIR}'"
  mkdir ${SOURCE_DIR}
fi

# Make the build directory if needed
if [ ! -d ${BUILD_DIR} ]; then
  echo "Making dir '${BUILD_DIR}'"
  mkdir ${BUILD_DIR}
fi

# Make the cache directory if needed
if [ ! -d ${CACHE_DIR} ]; then
  echo "Making dir '${CACHE_DIR}'"
  mkdir ${CACHE_DIR}
fi

# Make the import directory if needed
if [ ! -d ${IMPORT_DIR} ]; then
  echo "Making dir '${IMPORT_DIR}'"
  mkdir ${IMPORT_DIR}
fi

# Create the Filesystem if needed 
if [ ! -d "${CACHE_DIR}/chroot/etc" ]; then

  pushd "${CACHE_DIR}" &>/dev/null

  echo "Bulilding minimal filesystem.  This may take some time for '${BUILD_NAME}'"
  run_command "rm -rf chroot"
  run_command "debootstrap --arch=amd64 --variant=minbase ${BUILD_NAME} chroot" "Building minimal Filesystem from debootstrap"

  popd &>/dev/null

fi

# Build the file structure for the ISO
run_command "rm -rf ${ISO_DIR}"
run_command "mkdir -p ${ISO_DIR}/live"
run_command "rsync -aSH ${ISO_BASE_DIR}/ ${ISO_DIR}" "Syncing ISO_BASE ${ISO_BASE_DIR} to ISO ${ISO_DIR}"

# Copy the required files to boot the ISO
run_command "cp /usr/lib/ISOLINUX/isolinux.bin  ${ISO_DIR}/isolinux/."
run_command "cp /usr/lib/syslinux/modules/bios/*.c32 ${ISO_DIR}/isolinux/."
#run_command "cp ${ISO_DIR}/isolinux/."


# Copy the filesystem from cache into the build directory 
if [[ ! -d ${CHROOT_DIR} ]]; then
  echo "Initilizing the file system to ${CHROOT_DIR}"
  run_command "rsync -aSH ${CACHE_DIR}/chroot/ ${CHROOT_DIR}/" 
fi

